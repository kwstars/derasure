// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package repositories

import (
	"github.com/google/wire"
	"github.com/kwstars/derasure/pkg/config"
	"github.com/kwstars/derasure/pkg/database"
)

// Injectors from wire.go:

func CreateErasureRepository(f string) (IErasureRepostiory, func(), error) {
	viper, err := config.New(f)
	if err != nil {
		return nil, nil, err
	}
	redisOptions, err := database.NewRedisOptions(viper)
	if err != nil {
		return nil, nil, err
	}
	client, cleanup, err := database.New(redisOptions)
	if err != nil {
		return nil, nil, err
	}
	erasureRepostiory := &ErasureRepostiory{
		Redis: client,
	}
	return erasureRepostiory, func() {
		cleanup()
	}, nil
}

// wire.go:

var ProviderSet = wire.NewSet(
	ErasureSet,
)

var testProviderSet = wire.NewSet(config.ProviderSet, database.ProviderSet, ProviderSet)
